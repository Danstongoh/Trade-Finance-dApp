{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeremylim/Documents/SMU/dashboard-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeremylim/Documents/SMU/dashboard-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nexport var initialState = {\n  value: ''\n};\nexport var incrementBlock = function incrementBlock(block) {\n  return function (by) {\n    block.setState({\n      value: block.state.value + by\n    });\n  };\n};\nexport var loadConfig = function loadConfig(settings) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchConfig();\n\n            case 2:\n              res = _context.sent;\n              //settings.setState({ loading: false, config: res });\n              settings.setState({\n                loading: false,\n                config: res\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  );\n};","map":{"version":3,"sources":["/Users/jeremylim/Documents/SMU/dashboard-eth/src/state/block.js"],"names":["Web3","initialState","value","incrementBlock","block","by","setState","state","loadConfig","settings","fetchConfig","res","loading","config"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAO,IAAMC,YAAY,GAAE;AAEvBC,EAAAA,KAAK,EAAE;AAFgB,CAApB;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAAI,UAAAC,EAAE,EAAI;AACzCD,IAAAA,KAAK,CAACE,QAAN,CAAe;AAAEJ,MAAAA,KAAK,EAAEE,KAAK,CAACG,KAAN,CAAYL,KAAZ,GAAoBG;AAA7B,KAAf;AACH,GAFkC;AAAA,CAA5B;AAKP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGhBC,WAAW,EAHK;;AAAA;AAG5BC,cAAAA,GAH4B;AAIlC;AACAF,cAAAA,QAAQ,CAACH,QAAT,CAAkB;AAAEM,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,MAAM,EAAEF;AAA1B,eAAlB;;AALkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA;AAAA,CAA3B","sourcesContent":["import Web3 from 'web3';\n\nexport const initialState ={\n    \n    value: ''\n};\n\nexport const incrementBlock = block => by => {\n    block.setState({ value: block.state.value + by });\n};\n\n\nexport const loadConfig = settings => async () => {\n    //settings.setState({ loading: true });\n  \n    const res = await fetchConfig();\n    //settings.setState({ loading: false, config: res });\n    settings.setState({ loading: false, config: res });\n  }"]},"metadata":{},"sourceType":"module"}