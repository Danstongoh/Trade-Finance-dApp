{"ast":null,"code":"export var initialState = {\n  value: 100\n};\nexport var incrementBlock = function incrementBlock(counter) {\n  return function (by) {\n    counter.setState({\n      value: counter.state.value + by\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jeremylim/Documents/SMU/dashboard-eth/src/state/block.js"],"names":["initialState","value","incrementBlock","counter","by","setState","state"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAE;AACvBC,EAAAA,KAAK,EAAE;AADgB,CAApB;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO;AAAA,SAAI,UAAAC,EAAE,EAAI;AAC3CD,IAAAA,OAAO,CAACE,QAAR,CAAiB;AAAEJ,MAAAA,KAAK,EAAEE,OAAO,CAACG,KAAR,CAAcL,KAAd,GAAsBG;AAA/B,KAAjB;AACH,GAFoC;AAAA,CAA9B","sourcesContent":["export const initialState ={\n    value: 100\n};\n\nexport const incrementBlock = counter => by => {\n    counter.setState({ value: counter.state.value + by });\n};"]},"metadata":{},"sourceType":"module"}