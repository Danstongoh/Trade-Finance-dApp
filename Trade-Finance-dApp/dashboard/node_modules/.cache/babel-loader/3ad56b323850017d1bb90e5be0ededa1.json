{"ast":null,"code":"import _slicedToArray from \"/Users/jeremylim/Documents/SMU/dashboard-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeremylim/Documents/SMU/dashboard-eth/src/state/CounterView.js\";\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { useCounter } from './entities';\nimport { useBlock } from './block-entity';\nimport useInterval from './interval';\nexport var CounterView = function CounterView() {\n  // let [count, setCount] = useState(0);\n  useInterval(function () {\n    // setCount(count + 1);\n    increment(1); //incrementBlock(1);  \n\n    loadBlocks();\n  }, 1000);\n\n  var _useBlock = useBlock(),\n      _useBlock2 = _slicedToArray(_useBlock, 2),\n      block = _useBlock2[0],\n      _useBlock2$ = _useBlock2[1],\n      incrementBlock = _useBlock2$.incrementBlock,\n      loadBlocks = _useBlock2$.loadBlocks;\n\n  var _useCounter = useCounter(),\n      _useCounter2 = _slicedToArray(_useCounter, 2),\n      counter = _useCounter2[0],\n      _useCounter2$ = _useCounter2[1],\n      increment = _useCounter2$.increment,\n      decrement = _useCounter2$.decrement;\n\n  var handleClickIncrement = useCallback(function () {\n    return increment(1);\n  }, []);\n  var handleClickDecrement = useCallback(function () {\n    return decrement(1);\n  }, []); //   this.interval2 = setInterval( () => [this.getBlock(), this.getBlocks()], 10000);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Dynamic Count\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, counter.value), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, block.blockNo, \" | \", block.hash), React.createElement(\"button\", {\n    onClick: handleClickIncrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Increment\"), React.createElement(\"button\", {\n    onClick: handleClickDecrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Decrement\"));\n}; // async function  getBlock(){\n//     let promise = new Promise((res, rej) => {\n//         setTimeout(() => res(\"Now it's done!\"), 5000)\n//     });\n//     // wait until the promise returns us a value\n//     let result = await promise; \n//     // \"Now it's done!\"\n//     console.log(\"this\");\n//     return result\n//     }\n// async function loadPage(){\n//     let hello = await getBlock();\n//     return hello;\n// }","map":{"version":3,"sources":["/Users/jeremylim/Documents/SMU/dashboard-eth/src/state/CounterView.js"],"names":["React","useCallback","useState","useEffect","useRef","useCounter","useBlock","useInterval","CounterView","increment","loadBlocks","block","incrementBlock","counter","decrement","handleClickIncrement","handleClickDecrement","value","blockNo","hash"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AAEA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,QAAT,QAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B;AAEDD,EAAAA,WAAW,CAAC,YAAM;AAEjB;AACAE,IAAAA,SAAS,CAAC,CAAD,CAAT,CAHiB,CAIjB;;AACAC,IAAAA,UAAU;AACT,GANS,EAMP,IANO,CAAX;;AAH8B,kBAWeJ,QAAQ,EAXvB;AAAA;AAAA,MAWxBK,KAXwB;AAAA;AAAA,MAWhBC,cAXgB,eAWhBA,cAXgB;AAAA,MAWAF,UAXA,eAWAA,UAXA;;AAAA,oBAYaL,UAAU,EAZvB;AAAA;AAAA,MAYxBQ,OAZwB;AAAA;AAAA,MAYbJ,SAZa,iBAYbA,SAZa;AAAA,MAYFK,SAZE,iBAYFA,SAZE;;AAc/B,MAAMC,oBAAoB,GAAGd,WAAW,CAAC;AAAA,WAAMQ,SAAS,CAAC,CAAD,CAAf;AAAA,GAAD,EAAqB,EAArB,CAAxC;AACA,MAAMO,oBAAoB,GAAGf,WAAW,CAAC;AAAA,WAAMa,SAAS,CAAC,CAAD,CAAf;AAAA,GAAD,EAAqB,EAArB,CAAxC,CAf+B,CAiBjC;;AAEE,SAEE,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,CADJ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,OAAO,CAACI,KAAd,CAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMN,KAAK,CAACO,OAAZ,SAAwBP,KAAK,CAACQ,IAA9B,CAJF,EAKE;AAAQ,IAAA,OAAO,EAAEJ,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME;AAAQ,IAAA,OAAO,EAAEC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CAFF;AAWD,CA9BM,C,CAgCP;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useCallback,useState, useEffect, useRef } from 'react';\n\nimport { useCounter } from './entities';\nimport { useBlock} from './block-entity';\nimport useInterval from './interval';\n\nexport const CounterView = () => {\n    // let [count, setCount] = useState(0);\n\n   useInterval(() => {\n\n    // setCount(count + 1);\n    increment(1);\n    //incrementBlock(1);  \n    loadBlocks();  \n    }, 1000);\n\n  const [block, {incrementBlock, loadBlocks}] = useBlock();\n  const [counter, { increment, decrement }] = useCounter();\n\n  const handleClickIncrement = useCallback(() => increment(1), []);\n  const handleClickDecrement = useCallback(() => decrement(1), []);\n\n//   this.interval2 = setInterval( () => [this.getBlock(), this.getBlocks()], 10000);\n\n  return (\n\n    <>\n        <div><h2>Dynamic Count</h2></div>\n      <div>{counter.value}</div>\n\n      <div>{block.blockNo} | {block.hash}</div>\n      <button onClick={handleClickIncrement}>Increment</button>\n      <button onClick={handleClickDecrement}>Decrement</button>\n    </>\n  )\n};\n\n// async function  getBlock(){\n//     let promise = new Promise((res, rej) => {\n//         setTimeout(() => res(\"Now it's done!\"), 5000)\n//     });\n\n//     // wait until the promise returns us a value\n//     let result = await promise; \n  \n//     // \"Now it's done!\"\n//     console.log(\"this\");\n//     return result\n//     }\n// async function loadPage(){\n//     let hello = await getBlock();\n//     return hello;\n// }\n\n"]},"metadata":{},"sourceType":"module"}