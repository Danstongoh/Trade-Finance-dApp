{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeremylim/Documents/SMU/dashboard-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeremylim/Documents/SMU/dashboard-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nvar web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\nexport var initialState = {\n  value: ''\n};\nexport var incrementBlock = function incrementBlock(block) {\n  return function (by) {\n    block.setState({\n      value: block.state.value + by\n    });\n  };\n}; // getBlock(){\n//     web3.eth.getBlock(\"latest\").then(\n//         (result) =>{\n//             this.setState({\n//                 curr_block: result.number\n//             });\n//             this.setState({\n//                 block_hash: result.hash\n//             });\n//             //this.state.block_hash = result.hash;\n//             //this.state.curr_block = result.number;\n//             console.log(result.number);\n//             console.log(result.hash)\n//         }\n//     )\n// }\n\nexport var loadConfig = function loadConfig(settings) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getBlock(\"latest\").then(function (result) {\n                return block.setState;\n              });\n\n            case 2:\n              res = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  );\n};","map":{"version":3,"sources":["/Users/jeremylim/Documents/SMU/dashboard-eth/src/state/block.js"],"names":["Web3","web3","providers","HttpProvider","initialState","value","incrementBlock","block","by","setState","state","loadConfig","settings","eth","getBlock","then","result","res"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,IAAIC,IAAI,GAAG,IAAID,IAAJ,CAAS,IAAIA,IAAI,CAACE,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAX;AAEA,OAAO,IAAMC,YAAY,GAAE;AAEvBC,EAAAA,KAAK,EAAE;AAFgB,CAApB;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAAI,UAAAC,EAAE,EAAI;AACzCD,IAAAA,KAAK,CAACE,QAAN,CAAe;AAAEJ,MAAAA,KAAK,EAAEE,KAAK,CAACG,KAAN,CAAYL,KAAZ,GAAoBG;AAA7B,KAAf;AACH,GAFkC;AAAA,CAA5B,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGhBX,IAAI,CAACY,GAAL,CAASC,QAAT,CAAkB,QAAlB,EAA4BC,IAA5B,CACd,UAACC,MAAD;AAAA,uBAAYT,KAAK,CAACE,QAAlB;AAAA,eADc,CAHgB;;AAAA;AAG5BQ,cAAAA,GAH4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA;AAAA,CAA3B","sourcesContent":["import Web3 from 'web3';\nvar web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n\nexport const initialState ={\n    \n    value: ''\n};\n\nexport const incrementBlock = block => by => {\n    block.setState({ value: block.state.value + by });\n};\n\n// getBlock(){\n//     web3.eth.getBlock(\"latest\").then(\n//         (result) =>{\n//             this.setState({\n//                 curr_block: result.number\n//             });\n//             this.setState({\n//                 block_hash: result.hash\n//             });\n//             //this.state.block_hash = result.hash;\n//             //this.state.curr_block = result.number;\n//             console.log(result.number);\n//             console.log(result.hash)\n//         }\n//     )\n// }\n\nexport const loadConfig = settings => async () => {\n    //settings.setState({ loading: true });\n  \n    const res = await web3.eth.getBlock(\"latest\").then(\n        (result) => block.setState\n    )\n    //settings.setState({ loading: false, config: res });\n    //block.setState({ loading: false, config: res });\n  }"]},"metadata":{},"sourceType":"module"}