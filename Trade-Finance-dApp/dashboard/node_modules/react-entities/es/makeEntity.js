import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _extends from "@babel/runtime/helpers/esm/extends";
import { store, reserveNextEntityId } from './store';
import useEntity from './useEntity';
export var createSetState = function createSetState(entity) {
  return function (updates) {
    entity.state = _extends({}, entity.state, {}, updates);

    for (var i = 0; i < entity.subscribers.length; i++) {
      entity.subscribers[i](entity.state);
    }
  };
};
export var bindActions = function bindActions(actions, entity, deps) {
  var entityActions = {};

  for (var key in actions) {
    if (typeof actions[key] === 'function') {
      var action = actions[key](entity, deps);
      if (typeof action !== 'function') throw new Error('Action must be defined using higher-order function.');
      entityActions[key] = action;
    }
  }

  return entityActions;
};
export var createEntity = function createEntity(id, initialState, actions, deps) {
  var entity = store[id] = {
    state: initialState || {},
    subscribers: [],
    reset: function reset() {
      entity.state = initialState;
    }
  };
  entity.setState = createSetState(entity);
  entity.actions = bindActions(actions, entity, deps);
};
export var makeEntity = function makeEntity(_ref, deps) {
  var initialState = _ref.initialState,
      actions = _objectWithoutPropertiesLoose(_ref, ["initialState"]);

  var id = reserveNextEntityId();
  createEntity(id, initialState, actions, deps);
  return function () {
    return useEntity(id);
  };
};
export default makeEntity;